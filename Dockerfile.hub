# Production Dockerfile for Fabl Hub
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY packages/db/package*.json ./packages/db/
COPY packages/types/package*.json ./packages/types/
COPY packages/utils/package*.json ./packages/utils/
COPY apps/hub/package*.json ./apps/hub/

# Install dependencies
RUN npm ci

# Copy source code
COPY packages/ ./packages/
COPY apps/hub/ ./apps/hub/

# Build the Hub app
WORKDIR /app/apps/hub
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

WORKDIR /app

# Copy built application
COPY --from=builder --chown=nodejs:nodejs /app/apps/hub/.next ./apps/hub/.next
COPY --from=builder --chown=nodejs:nodejs /app/apps/hub/package*.json ./apps/hub/
COPY --from=builder --chown=nodejs:nodejs /app/apps/hub/public ./apps/hub/public
COPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/packages ./packages

# Install only production dependencies
RUN npm ci --only=production --prefix ./apps/hub && npm cache clean --force

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start the application
CMD ["npm", "start", "--prefix", "apps/hub"]