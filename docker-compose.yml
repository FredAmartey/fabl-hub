version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: fabl_production
      POSTGRES_USER: fabl
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fabl"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Fabl API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      NODE_ENV: production
      PORT: 3002
      DATABASE_URL: postgresql://fabl:${POSTGRES_PASSWORD}@postgres:5432/fabl_production
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      MUX_TOKEN_ID: ${MUX_TOKEN_ID}
      MUX_TOKEN_SECRET: ${MUX_TOKEN_SECRET}
      HUB_URL: ${HUB_URL:-http://localhost:3000}
      STUDIO_URL: ${STUDIO_URL:-http://localhost:3001}
      # Database pool settings
      DB_POOL_MAX: 20
      DB_POOL_MIN: 2
      DB_CONNECTION_LIMIT: 10
      # Security
      CORS_ORIGIN: ${HUB_URL:-http://localhost:3000},${STUDIO_URL:-http://localhost:3001}
      ENABLE_SECURITY_HEADERS: true
      RATE_LIMIT_MAX: 1000
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3002/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Fabl Hub (Main App)
  hub:
    build:
      context: .
      dockerfile: Dockerfile.hub
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${API_URL:-http://localhost:3002}
      NEXT_PUBLIC_STUDIO_URL: ${STUDIO_URL:-http://localhost:3001}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - api
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Fabl Studio (Creator Dashboard)
  studio:
    build:
      context: .
      dockerfile: Dockerfile.studio
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${API_URL:-http://localhost:3002}
      NEXT_PUBLIC_HUB_URL: ${HUB_URL:-http://localhost:3000}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
    ports:
      - "3001:3001"
    depends_on:
      - api
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Nginx reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - hub
      - studio
      - api
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: